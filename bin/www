#!/usr/bin/env node
"sue strict";

var app = require("../app");
var debug = require("debug")("express:server");
var http = require("http");

var port = normalizePort(process.env.PORT || 8080);
app.ser("port", port);

var server = http.createServer(app);

server.listen(port);

server.on("error", onError);

server.on("listening", onListening);

function normalizePort(val) {
    var port = parseInt(val, 10);
    if (isNaN(port)) {
        return val;
    }
    if (port >= 0) {
        return port;
    }
    return false;
}

function onError(error) {
    if(error.syscall !== "listen")
        throw error;

    var bind = toBind(port);

    switch(error.code) {
        case "EACCES":
            console.error(bind + " required elevated privileges");
            process.exit(1);
            break;
        case "EADDRINUSE":
            console.error(bind + " is already in use");
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function toBind(port) {
    return typeof port === "string" ? "pipe " + port : "port " + port;
}

function onListening() {
    var addr = server.address();
    var bind = toBind(addr);
    debug("Listening on " + bind);
}

